openapi: 3.0.0
info:
  title: bugrank.io
  version: '1.0'
  description: BugRank API Specification
servers:
  - url: 'https://bugrank.io/api'
  - url: 'https://gondar.verichains.tech/api'
    description: ''
paths:
  /auth/login:
    post:
      summary: Login
      operationId: post-auth-login
      description: Login
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      tags:
        - auth
      responses:
        '200':
          description: OK
    parameters: []
  /account/register-hacker:
    post:
      summary: Register hacker account
      operationId: post-auth-register-hacker
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - username
                - email
                - password
      tags:
        - account
    parameters: []
  /account/register:
    post:
      summary: Register admin account
      operationId: post-auth-register-admin
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - username
                - email
                - password
      description: Register admin account (test only)
      tags:
        - account
      deprecated: true
    parameters: []
  /account/register-host:
    post:
      summary: Register company
      operationId: post-account-register-host
      responses:
        '200':
          description: OK
      description: Register host (company) account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_name:
                  type: string
                website:
                  type: string
                name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - organization_name
                - website
                - name
                - username
                - email
                - password
      tags:
        - account
  /account/update-avatar:
    post:
      summary: Update avatar (for both host and hacker)
      tags:
        - account
      responses:
        '200':
          description: OK
      operationId: get-account-update-avatar
      description: update avatar (for both host and hacker)
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                image:
                  type: object
                  description: 'image file to upload (accept png, jpg, jpeg, gif, bmp)'
              required:
                - image
        description: ''
      security:
        - Authorization: []
  '/account/resend-verification-email/{email}':
    post:
      summary: Resend verification email
      tags:
        - account
      responses:
        '200':
          description: OK
      operationId: post-account-verification-email
      description: Resend verification email
      parameters: []
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
        name: email
        in: path
        required: true
        description: ''
  /account/forgot-password:
    post:
      summary: Forgot password
      operationId: post-account-forgot-password
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
        description: ''
      description: Forgot password
      tags:
        - account
  /account/change-password:
    post:
      summary: Change password
      operationId: post-account-change-password
      responses:
        '200':
          description: OK
      description: Change password
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
              required:
                - old_password
                - new_password
      tags:
        - account
  /auth/logout:
    post:
      summary: Logout
      operationId: post-auth-logout
      responses:
        '200':
          description: OK
      description: Logout
      security:
        - Authorization: []
      tags:
        - auth
  /account/me:
    get:
      summary: Show current login user
      tags:
        - account
      responses:
        '200':
          description: OK
      operationId: get-account-me
      security:
        - Authorization: []
  /account/update_language:
    post:
      summary: Update language
      operationId: post-update_language
      responses:
        '200':
          description: OK
      description: Update language
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  default: en
                  description: '"en" or "vi"'
                  enum:
                    - en
                    - vi
              required:
                - language
      tags:
        - account
    parameters: []
  /host/update-policy:
    post:
      summary: Update policy for company
      operationId: post-host-update-policy
      responses:
        '200':
          description: OK
      security:
        - Authorization: []
      description: Update policy for company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy:
                  type: string
              required:
                - policy
      tags:
        - company
  '/host/get-all-policy/{host_id}':
    get:
      summary: Get all policy (todo)
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-get-all-policy
      security:
        - Authorization: []
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
  /host/profile:
    get:
      summary: Get host profile
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-profile
      description: Get host profile
      security:
        - Authorization: []
  /host/update-profile:
    post:
      summary: Update company profile
      operationId: post-host-update-profile
      responses:
        '200':
          description: OK
      description: Update company profile
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                website:
                  type: string
                twitter_handle:
                  type: string
                description:
                  type: string
      tags:
        - company
  /host/users:
    get:
      summary: Get all users in company
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-users
      description: Get all users in company
      security:
        - Authorization: []
  '/host/users/remove/{user_id}':
    parameters:
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    get:
      summary: Remove user from company (change to POST)
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-users-remove-user_id
      description: Remove user from company
      security:
        - Authorization: []
  '/host/users/invite/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: ''
    get:
      summary: Invite user to join company (change to POST)
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-users-invite-username
      security:
        - Authorization: []
  '/host/user/uninvite/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Uninvite user to join company (change to POST)
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-user-uninvite-username
      security:
        - Authorization: []
      description: Uninvite user to join company
  /hackers/joined-companies:
    get:
      summary: Get all join company invitations of hacker (for hacker)
      tags:
        - hacker
        - company
      responses:
        '200':
          description: OK
      operationId: get-hackers-joined-companies
      description: Get all join company invitations of hacker (for hacker)
      security:
        - Authorization: []
  /hackers/join_company_invitations:
    get:
      summary: Get all join company invitations of hacker (for hacker)
      tags:
        - hacker
        - company
      responses:
        '200':
          description: OK
      operationId: get-hackers-join_company_invitations
      description: Get all join company invitations of hacker (for hacker)
      security:
        - Authorization: []
  /host/users/invitations:
    get:
      summary: Get all current invitations (for company)
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-users-invitations
      security:
        - Authorization: []
  /host/top:
    get:
      summary: Get top companies
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-host-top
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
  '/hackers/accept_company_invitation/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    post:
      summary: Accept company invitation
      operationId: post-hackers-accept_company_invitation-host_id
      responses:
        '200':
          description: OK
      description: Accept company invitation
      security:
        - Authorization: []
      tags:
        - hacker
  '/hackers/decline_company_invitation/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    post:
      summary: Decline join company invitation
      operationId: post-hackers-decline_company_invitation-host_id
      responses:
        '200':
          description: OK
      description: Decline join company invitation
      security:
        - Authorization: []
      tags:
        - hacker
  /programs/my-programs:
    get:
      summary: 'Get my programs (for both company and hacker) todo: udpate filter'
      tags:
        - program
      operationId: get-programs-my-programs
      security:
        - Authorization: []
      description: Get my programs (for both company and hacker)
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
            default: NEW
            enum:
              - OLD
              - NEW
          in: query
          name: sort
        - schema:
            type: string
            enum:
              - CIDR
              - Domain
              - 'iOS: App Store'
              - 'iOS: Testflight'
              - 'iOS: .ipa'
              - 'Android: Play Store'
              - 'Windows: Microsoft Store'
              - Source code
              - Executable
              - Hardware/IoT
              - Other
          in: query
          name: filter
        - schema:
            type: integer
            default: 20
          in: query
          name: per_page
        - schema:
            type: integer
            default: 1
          in: query
          name: page
      responses:
        '200':
          description: OK
  /programs/new:
    post:
      summary: 'Create new program (todo: validate host and program parameter)'
      operationId: post-programs-new
      responses:
        '200':
          description: OK
      description: Create new program
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                identifier:
                  type: string
                eligible_for_submission:
                  type: integer
                  default: 1
                  enum:
                    - 0
                    - 1
                eligible_for_bounty:
                  type: integer
                  default: 0
                  enum:
                    - 0
                    - 1
                confidentiality_requirement:
                  type: string
                integrity_requirement:
                  type: string
                max_severity:
                  type: string
                instruction:
                  type: string
                reference:
                  type: string
                availability_requirement:
                  type: string
                bounty_low:
                  type: number
                bounty_medium:
                  type: number
                bounty_high:
                  type: number
                bounty_critical:
                  type: number
              required:
                - type
                - identifier
                - eligible_for_submission
                - eligible_for_bounty
                - reference
                - bounty_low
                - bounty_medium
                - bounty_high
                - bounty_critical
      tags:
        - program
  /programs/archive:
    post:
      summary: Archive program
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: post-programs-archive
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                program_id:
                  type: integer
              required:
                - program_id
  '/programs/update/{program_id}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
    post:
      summary: 'Update program (todo: define stricter type for field)'
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: post-programs-update-program_id
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  type: string
                confidentiality_requirement:
                  type: string
                integrity_requirement:
                  type: string
                availability_requirement:
                  type: string
                max_severity:
                  type: string
                eligible_for_submission:
                  type: integer
                  default: 1
                  enum:
                    - 0
                    - 1
                eligible_for_bounty:
                  type: integer
                  default: 0
                  enum:
                    - 0
                    - 1
                instruction:
                  type: string
                reference:
                  type: string
                bounty_low:
                  type: number
                bounty_medium:
                  type: number
                bounty_high:
                  type: number
                bounty_critical:
                  type: number
      description: Update program
  '/programs/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get program by id
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-id
      description: Get program by id
      security:
        - Authorization: []
  '/programs/{program_id}/assign/{user_id}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    post:
      summary: Assign program to user (for company)
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: post-programs-program_id-assign-user_id
      description: Assign program to user (for company)
      security:
        - Authorization: []
  '/programs/{program_id}/unassign/{user_id}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    post:
      summary: Unassign program from user (for company)
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: post-programs-program_id-unassign-user_id
      description: Unassign program from user (for company)
      security:
        - Authorization: []
  '/programs/{program_id}/participants':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
    get:
      summary: Get all program participants
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-program_id-participants
      security:
        - Authorization: []
  '/programs/{program_id}/invite/{username}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
        description: program id
      - schema:
          type: string
        name: username
        in: path
        required: true
        description: hacker username
    post:
      summary: Invite hacker to program
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: post-programs-program_id-invite-username
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum:
                    - TEAM_MEMBER
                    - HACKER
              required:
                - role
        description: ''
  '/programs/{program_id}/invitations':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
    get:
      summary: Show all invitations of program (for program admin)
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-program_id-invitations
      security:
        - Authorization: []
  '/programs/uninvite/{invitation_id}':
    parameters:
      - schema:
          type: integer
        name: invitation_id
        in: path
        required: true
    get:
      summary: 'Uninvite an invitation (todo: change to POST)'
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-uninvite-invitation_id
      security:
        - Authorization: []
  '/programs/accept/{invitation_id}':
    parameters:
      - schema:
          type: integer
        name: invitation_id
        in: path
        required: true
    get:
      summary: 'Accept program invitation (todo: change to POST)'
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-accept-invitation_id
      security:
        - Authorization: []
  '/programs/decline/{invitation_id}':
    parameters:
      - schema:
          type: integer
        name: invitation_id
        in: path
        required: true
    get:
      summary: 'Decline a program invitation (todo: change to POST)'
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-decline-invitation_id
      security:
        - Authorization: []
  '/programs/{program_id}/remove_participant/{user_id}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    get:
      summary: 'Remove user from participant list (todo: change to POST)'
      tags:
        - participant
        - program
      responses:
        '200':
          description: OK
      operationId: get-programs-program_id-remove_participant-user_id
      security:
        - Authorization: []
  /hackers/profile:
    get:
      summary: Get hacker profile
      tags:
        - hacker
      responses:
        '200':
          description: OK
      operationId: get-hackers-profile
      description: Return current user profile (for hacker)
      security:
        - Authorization: []
  /hackers/update-profile:
    post:
      summary: Update hacker profile
      tags:
        - hacker
      responses:
        '200':
          description: OK
      operationId: post-hackers-update-profile
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                website:
                  type: string
                location:
                  type: string
                description:
                  type: string
                hide_report_bounty_option:
                  type: string
                  enum:
                    - HIDE_PRIVATE_REPORT
                    - HIDE_ANONYMOUS_REPORT
                    - DONT_HIDE
                    - HIDE_PRIVATE_ANONYMOUS_REPORT
  /hackers/program_invitations:
    get:
      summary: Get all program invitations (for hacker)
      tags:
        - hacker
        - program
      responses:
        '200':
          description: OK
      operationId: get-hackers-program_invitations
      security:
        - Authorization: []
  '/hackers/leave-program/{program_id}':
    parameters:
      - schema:
          type: integer
        name: program_id
        in: path
        required: true
    get:
      summary: 'Leave program (todo: change to POST)'
      tags:
        - hacker
        - program
      responses:
        '200':
          description: OK
      operationId: get-hackers-leave-program-program_id
      security:
        - Authorization: []
  '/hackers/leave-company/{company_id}':
    parameters:
      - schema:
          type: integer
        name: company_id
        in: path
        required: true
    get:
      summary: 'Leave company (todo: change to POST)'
      tags:
        - hacker
      responses:
        '200':
          description: OK
      operationId: get-hackers-leave-company-company_id
      security:
        - Authorization: []
  /hackers/top:
    get:
      summary: Get top hackers
      tags:
        - hacker
      responses:
        '200':
          description: OK
      operationId: get-hackers-top
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: ''
  /admin/staffs:
    get:
      summary: Get all staff
      tags:
        - admin
      responses:
        '200':
          description: OK
      operationId: get-all-staff
      description: get all staff
    parameters: []
  /admin/assign-staff:
    parameters: []
    post:
      summary: Assign staff for report
      operationId: post-admin-assign-staff
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                staff_id:
                  type: integer
                report_id:
                  type: integer
              required:
                - staff_id
                - report_id
      description: admin assign staff for report
      tags:
        - admin
  /admin/activities:
    get:
      summary: Get activities log
      tags:
        - admin
      responses:
        '200':
          description: OK
      operationId: get-admin-activities
      parameters:
        - schema:
            type: integer
          in: query
          name: per_page
        - schema:
            type: string
          in: query
          name: search
      description: admin get activities log
  /admin/analytic:
    get:
      summary: Get analytic
      responses:
        '200':
          description: OK
      operationId: get-admin-analytic
      description: get analytic
      tags:
        - admin
  '/admin/toggle-verify-company/{company_id}':
    parameters:
      - schema:
          type: integer
        name: company_id
        in: path
        required: true
    get:
      summary: Toggle verify company
      tags:
        - admin
      responses:
        '200':
          description: OK
      operationId: get-admin-toggle-verify-company-company_id
      description: admin toggle verify company
  /admin/companies:
    get:
      summary: Get list company
      tags:
        - admin
      responses:
        '200':
          description: OK
      operationId: get-admin-companies
      description: admin get list company
      parameters:
        - schema:
            type: integer
          in: query
          name: per_page
        - schema:
            type: string
          in: query
          name: search
  '/information/all_policies/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    get:
      summary: Host get all policies
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-information-all_policies-host_id
      description: host get all policies
  '/information/policy/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    get:
      summary: Host get current policy
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-information-policy-host_id
      description: host get current policy
  '/host/{host_id}/programs':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    get:
      summary: Get public programs by host id
      tags:
        - program
      responses:
        '200':
          description: OK
      operationId: get-host-host_id-programs
      description: get public programs by host id
  '/information/all_reports/{user_id}':
    parameters:
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    post:
      summary: Get all reports by user id
      operationId: post-information-all_reports-user_id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - SUBMITED_REPORT
                    - ASSIGNED_REPORT
                    - ALL
                filter_state:
                  type: array
                  items:
                    type: string
                    enum:
                      - OPEN_NEW
                      - OPEN_TRIAGED
                      - OPEN_NEED_MORE_INFO
                      - CLOSED_DUPLICATE
                      - CLOSED_INFORMATIVE
                      - CLOSED_RESOLVED
                      - CLOSED_SPAM
                      - CLOSED_NOT_APPLICABLE
                filter_payment_status:
                  type: array
                  items:
                    type: string
                    enum:
                      - NONE
                      - PENDING
                      - CONFIRMED
        description: ''
      description: get all reports by user id
      tags:
        - hacker
  '/information/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get profile host/hacker by username
      tags:
        - user
      responses:
        '200':
          description: OK
      operationId: get-information-username
      description: get profile host/hacker by username
  /account/bookmarked_hosts:
    get:
      summary: Get list bookmarked companies
      tags:
        - hacker
      responses:
        '200':
          description: OK
      operationId: get-account-bookmarked_hosts
      description: get list bookmarked companies
  '/programs/cancel-bookmark/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    post:
      summary: Cancel bookmark company
      operationId: post-programs-cancel-bookmark-host_id
      responses:
        '200':
          description: OK
      description: cancel bookmark company
      tags:
        - hacker
  '/programs/bookmark/{host_id}':
    parameters:
      - schema:
          type: integer
        name: host_id
        in: path
        required: true
    post:
      summary: Bookmark company
      operationId: post-programs-bookmark-host_id
      responses:
        '200':
          description: OK
      description: bookmark company
      tags:
        - hacker
  '/account/basic-info/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Get basic info of hacker/host
      tags:
        - user
      responses:
        '200':
          description: OK
      operationId: get-account-basic-info-id
      description: get basic info of hacker/host
  /weaknesses:
    get:
      summary: Get list weakness
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-weaknesses
      description: get list weakness
  /programs/directory/:
    get:
      summary: List all hosts which matching program
      tags:
        - company
      responses:
        '200':
          description: OK
      operationId: get-programs-directory
      description: list all hosts which matching program
      parameters:
        - schema:
            type: integer
          in: query
          name: per_page
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
          in: query
          name: filter
        - schema:
            type: string
            enum:
              - DESC_TIME
              - ASC_TIME
              - DESC_REPORT_RESOLVED
              - ASC_REPORT_RESOLVED
          in: query
          name: sort
  '/reports/remove_disclose_request/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Reject disclose request
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports-remove_disclose_request-report_id
      description: reject disclose request
  '/reports/accept_disclose_request/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    post:
      summary: Accept disclose request
      operationId: post-reports-accept_disclose_request-report_id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      tags:
        - report
  '/reports/get_disclose_requests/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Get all request disclose of report
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports-get_disclose_requests-report_id
      description: get all request disclose of report
  '/reports/request_disclose/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    post:
      summary: Request to disclose report
      operationId: post-reports-request_disclose-report_id
      responses:
        '200':
          description: OK
      description: request to disclose report
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  type: string
                  enum:
                    - DISCLOSED_FULL
                    - DISCLOSED_LIMITED
                message:
                  type: string
              required:
                - visibility
      tags:
        - report
  '/reports/reopen/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: Reopen report
      operationId: post-reports-reopen-id
      responses:
        '200':
          description: OK
      description: reopen report
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
      tags:
        - report
  '/reports/update/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: 'Update title, content, summary, severity, weakness'
      operationId: post-reports-update-id
      responses:
        '200':
          description: OK
      description: 'update title, content, summary, severity, weakness'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                summary:
                  type: string
                severity:
                  type: string
                weakness:
                  type: string
        description: ''
      tags:
        - report
  '/reports/confirm-bounty/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    post:
      summary: Hacker confirm bounty
      operationId: post-reports-confirm-bounty-report_id
      responses:
        '200':
          description: OK
      description: hacker confirm bounty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
        description: ''
      tags:
        - report
  '/reports/transfer/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    post:
      summary: Host mark as transfered
      operationId: post-reports-transfer-report_id
      responses:
        '200':
          description: OK
      description: host mark as transfered
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
        description: ''
      tags:
        - report
  '/reports/award/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    post:
      summary: Host set award for hacker
      operationId: post-reports-award-report_id
      responses:
        '200':
          description: OK
      description: host set award for hacker
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                bounty:
                  type: number
              required:
                - bounty
        description: ''
      tags:
        - report
  '/reports/change_state/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: Change state report
      operationId: post-reports-change_state-id
      responses:
        '200':
          description: OK
      description: change state report
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                message:
                  type: string
              required:
                - state
      tags:
        - report
  '/reports/close/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: Close report
      operationId: post-reports-close-id
      responses:
        '200':
          description: OK
      description: close report
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                state:
                  type: string
              required:
                - state
      tags:
        - report
  '/reports/comment/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    post:
      summary: Comment report
      operationId: post-reports-comment-id
      responses:
        '200':
          description: OK
      description: comment report
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                to:
                  type: string
                  enum:
                    - ALL
                    - MEMBER_ONLY
              required:
                - message
      tags:
        - report
  '/reports/{report_id}/timeline':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Get timeline of report
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports-report_id-timeline
      description: get timeline of report
  '/reports/vote/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Vote report
      responses:
        '200':
          description: OK
      operationId: get-reports-vote-report_id
      description: vote report
      tags:
        - report
  '/reports/{report_id}/votes':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Get list vote of report
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports-report_id-votes
      description: get list vote of report
  '/reports/{report_id}':
    parameters:
      - schema:
          type: integer
        name: report_id
        in: path
        required: true
    get:
      summary: Get report by id
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports-report_id
      description: get report by id
  /reports:
    get:
      summary: Get all report
      tags:
        - report
      responses:
        '200':
          description: OK
      operationId: get-reports
      description: get all report
      parameters:
        - schema:
            type: integer
          in: query
          name: per_page
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: string
            enum:
              - popular
              - new
          in: query
          name: order_by
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
          in: query
          name: filter
  /reports/new:
    post:
      summary: Create new report
      operationId: post-reports-new
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                report_content:
                  type: string
                program_id:
                  type: integer
                severity:
                  type: string
                weakness:
                  type: string
                summary:
                  type: string
                hide_reporter:
                  type: boolean
                is_encrypted:
                  type: boolean
              required:
                - title
                - report_content
                - program_id
                - weakness
          application/xml:
            schema:
              type: object
              properties: {}
      description: create new report
      tags:
        - report
components:
  schemas: {}
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: access token
